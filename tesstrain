#!/bin/sh
help="Created by tuule_
Script crafted to generate tesseract *.traineddata files.                                                                                                    

USAGE:                                                                                                                                                       
       $(basename "$0") [-f contentfile] [-f fontdir] [-u unicharset] [-l lang] 'fontname1 : properties' ['fontname2 : properties' ...]                                                    

OPTIONS:                                                                                                                                                     
      -h show this help message                                                                                                                              

      -f provides directory with *.ttf fonts. Default is .fonts/                                                                                             

      -u provides the unicharset file used to generate shapes. Default is .unicharset                                                                        

      -c provides the text file used to generate tif/box pair. Default is .content                                                                           
       
      -w provides the wordlist of the most frequent words (optional)

      -l provides the output package name. Default is eng

PROPERTIES:
       Properties are 5 binary numbers describing font, where they are for <italic><bold><fixed><serif><fraktur>"
clear_proj()
{
    rm  *.box *.tif *.tr *.box.txt *normproto *inttemp *shapetable $LANG.unicharset *pffmtable font_properties *.freq-dawg
}

usage()
{
    echo "$help"
}

CONTENT_FILE=".content"
FONT_DIR=".fonts/"
UNICHARSET=".unicharset"
WORDLIST=""
LANG="eng"

while getopts "hf:u:c:l:w:d" OPTION; do
    case $OPTION in
	c ) CONTENT_FILE="$OPTARG";;
	
	l ) LANG="$OPTARG";;
	
	f ) FONT_DIR="$OPTARG";;
	
	u ) UNICHARSET="$OPTARG";;

	w ) WORDLIST="$OPTARG";;
	
	h ) usage
	    exit 0;;

	d ) clear_proj
	    exit;;
	
	? ) usage
	    exit 1;;
    esac
done

shift $((OPTIND-1))

if [ $# == 0 ]; then
    echo "No input provided!"
    usage
fi

if [ ! -f $CONTENT_FILE ]; then
    echo "Content file not found!"
    exit 1
fi

if [ ! -d $FONT_DIR ]; then
    echo "Font directory not found!"
    exit 1
fi

if [ ! -f $UNICHARSET ]; then
    echo "unicharset file not found!"
    exit 1
fi

for i in "$@"; do
    font=$(echo "$i" | awk -F':' '{print $1}')
    properties=$(echo "$i" | awk -F':' '{print $2}')
    if [ -z "$properties" ]; then
	echo "No properties detected for $font. Please, input argument in format 'Font Name : properties' where properties are 5 bin numbers."
	exit 1;
    fi
    fontname=$(echo "$font" | awk '{gsub(" ", "", $0); print}' | awk '{print tolower($0)}')
    echo "$fontname$properties" >> font_properties
   
    echo "Generating tif/box pair for" $font "font"
    text2image --ptsize=32 --xsize=2550 --ysize=3300 --resolution=300 --text=$CONTENT_FILE --outputbase=$LANG.$fontname.exp0 --font="$font" --fonts_dir=$FONT_DIR || exit 1;
done

for i in *.tif; do
    fontname=$(echo $i | awk -F'.' '{print $2}')
    echo "$i" "$LANG.$fontname.box"
    tesseract "$i" "$LANG.$fontname.box" box.train || exit 1;
done


shapeclustering -F font_properties -U .unicharset *.tr &&\
    mftraining -F font_properties -U .unicharset -O $LANG.unicharset *.tr &&\
    cntraining *.tr
if [ ! -z "$WORDLIST" ]; then
    wordlist2dawg "$WORDLIST" $LANG.freq-dawg $LANG.unicharset
fi
mv normproto $LANG.normproto
mv inttemp  $LANG.inttemp
mv pffmtable  $LANG.pffmtable
mv shapetable  $LANG.shapetable
combine_tessdata $LANG. &&\
    echo "Succesfully generated" $LANG "package."
clear_proj
